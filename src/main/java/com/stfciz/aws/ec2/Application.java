
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stfciz.aws.ec2;

import com.stfciz.aws.ec2.ui.EC2InstancesTableEventHandler;
import com.stfciz.aws.ec2.data.EC2Instance;
import com.stfciz.aws.ec2.data.EC2InstancesManager;
import com.stfciz.aws.ec2.ui.EC2InstanceCell;
import com.stfciz.aws.ec2.ui.EC2InstancesTableModel;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Bellevue
 */
public class Application extends javax.swing.JFrame {

    private EC2InstancesManager ec2InstancesManager;

    private EC2InstancesTableEventHandler ec2InstancesTableEventHandler;

    /**
     * Creates new form Frame
     */
    public Application() {
        initComponents();
        initEC2Values();
        binding();
    }

    /**
     *
     */
    private void initEC2Values() {
        try {
            this.ec2InstancesManager = new EC2InstancesManager();
        } catch (IOException ex) {
            log(ex, null);
        }
    }

    /**
     *
     */
    private void binding() {
        if (this.ec2InstancesManager.hasCredentials()) {
            this.accessKeyId.setText(this.ec2InstancesManager.getAWSAccessKeyId());
            this.accessSecretCode.setText(this.ec2InstancesManager.getAWSSecretKey());
            log(null, "Load from " + EC2InstancesManager.CREDENTIALS_FILE);
        } else {
            this.btnInstances.setEnabled(false);
            log(null, "You must input the accessKeyId and accessSecretCode values");
        }

        // init list
        this.listRegions.removeAllItems();

        for (String region : this.ec2InstancesManager.getRegions()) {
            this.listRegions.addItem(region);
        }

        // init table
        this.ec2InstancesTableEventHandler = new EC2InstancesTableEventHandler(this.tabInstances, this.ec2InstancesManager);
        this.tabInstances.setModel(new EC2InstancesTableModel((null)));
        this.tabInstances.setDefaultRenderer(EC2Instance.class, new EC2InstanceCell(this.ec2InstancesTableEventHandler));
        this.tabInstances.setDefaultEditor(EC2Instance.class, new EC2InstanceCell(this.ec2InstancesTableEventHandler));
        this.tabInstances.setRowHeight(80);
    }

    /**
     *
     * @param ex
     * @param msg
     */
    private void log(Exception ex, String msg) {
        if (msg != null) {
            if (ex != null) {
                this.txtOut.setText(msg + " , cause : ");
            } else {
                this.txtOut.setText(msg);
            }
        }
        if (ex != null) {
            this.txtOut.setText(ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jButton4 = new javax.swing.JButton();
    jLabel4 = new javax.swing.JLabel();
    accessKeyId = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    accessSecretCode = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    btnSave = new javax.swing.JButton();
    btnCancel = new javax.swing.JButton();
    btnInstances = new javax.swing.JButton();
    jScrollPane3 = new javax.swing.JScrollPane();
    tabInstances = new javax.swing.JTable();
    jScrollPane4 = new javax.swing.JScrollPane();
    txtOut = new javax.swing.JTextPane();
    listRegions = new javax.swing.JComboBox();
    jMenuBar1 = new javax.swing.JMenuBar();

    jButton4.setText("jButton4");

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("EC2 Instances");
    setResizable(false);

    jLabel4.setText("AccessKeyId :");

    accessKeyId.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        accessKeyIdActionPerformed(evt);
      }
    });

    jLabel5.setText("AccessSecretCode :");

    jLabel6.setText("Region :");

    btnSave.setText("Save");
    btnSave.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSaveActionPerformed(evt);
      }
    });

    btnCancel.setText("Cancel");
    btnCancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnCancelActionPerformed(evt);
      }
    });

    btnInstances.setText("View Instances");
    btnInstances.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnInstancesActionPerformed(evt);
      }
    });

    tabInstances.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "Instance Id", "Name", "Status", "Actions"
      }
    ) {
      Class[] types = new Class [] {
        java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }
    });
    tabInstances.setRowHeight(70);
    tabInstances.setUpdateSelectionOnSort(false);
    tabInstances.setVerifyInputWhenFocusTarget(false);
    jScrollPane3.setViewportView(tabInstances);

    jScrollPane4.setViewportView(txtOut);

    listRegions.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(jScrollPane4)
          .addComponent(btnInstances, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel5)
              .addComponent(jLabel4)
              .addComponent(jLabel6))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(accessSecretCode, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                  .addComponent(accessKeyId))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
              .addComponent(listRegions, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel4)
          .addComponent(accessKeyId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(btnSave))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel5)
          .addComponent(accessSecretCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(btnCancel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel6)
          .addComponent(listRegions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(btnInstances)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void accessKeyIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accessKeyIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accessKeyIdActionPerformed

    /**
     * 
     * @param evt 
     */
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            ec2InstancesManager.save(this.accessKeyId.getText(), this.accessSecretCode.getText());
            log(null, "Saved in " + EC2InstancesManager.CREDENTIALS_FILE);
        } catch (IOException ex) {
            Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (ec2InstancesManager.hasCredentials()) {
            this.btnInstances.setEnabled(true);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * 
     * @param evt 
     */
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        binding();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * 
     * @param evt 
     */
    private void btnInstancesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInstancesActionPerformed
        final List<EC2Instance> instances = ec2InstancesManager.getEC2Instances(listRegions.getSelectedItem().toString());
        log(null, instances.size() + " instance(s)");
        tabInstances.setModel(new EC2InstancesTableModel(instances));
    }//GEN-LAST:event_btnInstancesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                final Application application = new Application();
                application.setLocationRelativeTo(null);  // *** this will center your app ***
                application.setVisible(true);

            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField accessKeyId;
  private javax.swing.JTextField accessSecretCode;
  private javax.swing.JButton btnCancel;
  private javax.swing.JButton btnInstances;
  private javax.swing.JButton btnSave;
  private javax.swing.JButton jButton4;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JScrollPane jScrollPane3;
  private javax.swing.JScrollPane jScrollPane4;
  private javax.swing.JComboBox listRegions;
  private javax.swing.JTable tabInstances;
  private javax.swing.JTextPane txtOut;
  // End of variables declaration//GEN-END:variables
}
